        -:    0:Source:ex_03.cpp
        -:    0:Graph:ex_03.gcno
        -:    0:Data:ex_03.gcda
        -:    0:Runs:11
        -:    0:Programs:1
        -:    1:#include <iostream>
        -:    2:
        -:    3:using namespace std;
        -:    4:
function _Z22tinhHeSoXepLoaiHocBongPdif called 11 returned 100% blocks executed 72%
       11:    5:float tinhHeSoXepLoaiHocBong(double diemMH[], int soMH, float diemRL){
       11:    6:    if(soMH > 0){
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:    7:        //tinh tong diem
       11:    8:        double tongDiem = 0;
       29:    9:        for(int i = 0; i < soMH; ++i)
branch  0 taken 62% (fallthrough)
branch  1 taken 38%
       18:   10:            tongDiem += diemMH[i];
        -:   11:        
        -:   12:        //tinh diem tb
       11:   13:        double diemTB = tongDiem / soMH;
        -:   14:
        -:   15:        // xep loai hb
       11:   16:        double heSo = 0;
        -:   17:
       11:   18:        if (diemTB > 9){
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   19:            if (diemRL >= 90)
branch  0 never executed
branch  1 never executed
    #####:   20:                heSo = 1.2;
    #####:   21:            else if (diemRL >= 80)
branch  0 never executed
branch  1 never executed
    #####:   22:                heSo = 1.1;
    #####:   23:            else if (diemRL >= 65)
branch  0 never executed
branch  1 never executed
    #####:   24:                heSo = 1.0;
        -:   25:        }
       11:   26:        else if ((diemTB >= 8 && diemTB < 9)){
branch  0 taken 73% (fallthrough)
branch  1 taken 27%
branch  2 taken 50% (fallthrough)
branch  3 taken 50%
        8:   27:            if (diemRL >= 80)
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
        2:   28:                heSo = 1.1;
        2:   29:            else if (diemRL >= 65)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        2:   30:                heSo = 1.0;
        -:   31:        }
        7:   32:        else if ((diemTB >= 7 && diemTB < 8)){
branch  0 taken 71% (fallthrough)
branch  1 taken 29%
branch  2 taken 20% (fallthrough)
branch  3 taken 80%
        1:   33:            if (diemRL >= 65)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        1:   34:                heSo = 1.0;
        -:   35:        }
        -:   36:        
       11:   37:        return heSo;
        -:   38:    }
        -:   39:
    #####:   40:    return -1;
        -:   41:}
        -:   42:
        -:   43:
function main called 11 returned 100% blocks executed 93%
       11:   44:int main(){
       11:   45:    int soMH = 4;
       11:   46:    cin >> soMH;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       11:   47:    double *diemMH = new double[soMH];
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 never executed
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
       29:   48:    for(int i = 0; i < soMH; ++i)
branch  0 taken 62% (fallthrough)
branch  1 taken 38%
       18:   49:        cin >> diemMH[i];
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       11:   50:    int diemRL = 4;
       11:   51:    cin >> diemRL;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   52:
       11:   53:    cout << tinhHeSoXepLoaiHocBong(diemMH, soMH, diemRL);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
function _GLOBAL__sub_I__Z22tinhHeSoXepLoaiHocBongPdif called 11 returned 100% blocks executed 100%
function _Z41__static_initialization_and_destruction_0ii called 11 returned 100% blocks executed 100%
       44:   54:}
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
